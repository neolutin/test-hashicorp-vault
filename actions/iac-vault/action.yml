name: 'Deploy Vault Infrastructure'
description: 'Common actions to deploy an Hashicorp vault on an environment'
inputs:
  resources-suffix:
    description: 'Suffix to apply to the resource names (i.e. env-num)'
    required: true
  environment:
    description: 'Terraform workspace'
    default: "dev"
  azuretenant-id:
    description: 'Azure tenant'
    required: true
  terraformclient-id:
    description: 'Client Id of the Azure App allowed to deploy in the subscription'
    required: true
  terraformclient-secret:
    description: 'Secret of the Azure App allowed to deploy in the subscription'
    required: true
outputs:
  vault-vm-name:
    description: "Name (FQDN or IP) of the created VM"
    value: ${{ steps.getinfravalues.outputs.vmfqdn }}

runs:
  using: "composite"
  steps:
    - name: Download terraform Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        name: terraform
        path: terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_version: 1.0
        terraform_wrapper: false
    - name: Terraform Plan
      id: plan
      env:
        ARM_TENANT_ID:     ${{ inputs.azuretenant-id }}
        ARM_CLIENT_ID:     ${{ inputs.terraformclient-id }}
        ARM_CLIENT_SECRET: ${{ inputs.terraformclient-secret }}
      # if: github.event_name == 'pull_request' # Not yet available for composite actions
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo ::set-output name=outcome::success
          terraform init \
            && terraform workspace select ${{ inputs.environment }} \
            && terraform plan -no-color -input=false -var 'suffix=${{ inputs.resources-suffix }}' > plan.out \
            || echo ::set-output name=outcome::failure
          # Workaround on composite actions to keep multilines
          PLAN_OUT=$(cat plan.out)
          PLAN_OUT="${PLAN_OUT//'%'/'%25'}"
          PLAN_OUT="${PLAN_OUT//$'\n'/'%0A'}"
          PLAN_OUT="${PLAN_OUT//$'\r'/'%0D'}"
          echo "::set-output name=stdout::$PLAN_OUT"
        fi
        exit 0
      # continue-on-error: true # Not yet available for composite actions
      shell: bash
      working-directory: terraform
    - name: Update Pull Request
      uses: actions/github-script@0.9.0
      # if: github.event_name == 'pull_request' # Not yet available for composite actions
      env:
        # PLAN: "terraform\n${{ steps.plan.stdout }}" # to be tested outside composite actions
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        script: |
          if ('${{ github.event_name }}' !== 'pull_request') {
            return // Only available for pull requests
          }

          const {PLAN} = process.env
          const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outputs.outcome }}\`

          <details><summary>Show ${{ inputs.environment }} Plan</summary>

          \`\`\`\n
          ${PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - name: Terraform Plan Status
      # if: steps.plan.outcome == 'failure' # Not yet available for composite actions
      run: |
        if [[ "${{ steps.plan.outputs.outcome }}" == "failure" ]]; then
          exit 1
        fi
        exit 0
      shell: bash
    - name: Terraform Apply
      #if: ((inputs.environment == 'prod' && github.ref == 'refs/heads/main') || (inputs.environment != 'prod' && github.ref != 'refs/heads/main')) && github.event_name == 'push'
      env:
        ARM_TENANT_ID:     ${{ inputs.azuretenant-id }}
        ARM_CLIENT_ID:     ${{ inputs.terraformclient-id }}
        ARM_CLIENT_SECRET: ${{ inputs.terraformclient-secret }}
      run: |
        if [[ (
                ("${{inputs.environment}}" == "prod" && "${{github.ref}}" == 'refs/heads/main' && "${{github.event_name}}" == "push") \
             || ("${{inputs.environment}}" != "prod" && "${{github.ref}}" != 'refs/heads/main' && "${{github.event_name}}" != "pull_request")) \
               ]]; then
          terraform init
          terraform workspace select ${{ inputs.environment }}
          terraform apply -auto-approve -input=false -var 'suffix=${{ inputs.resources-suffix }}'
        fi
        exit 0
      shell: bash
      working-directory: terraform
    - name: 'Get Infra Outputs'
      id: getinfravalues
      # if: github.event_name == 'push' # Not yet available for composite actions
      run: |
        if [[ "${{github.event_name}}" == "push" ]]; then
          terraform workspace select ${{ inputs.environment }}
          vmfqdn=$(terraform output -json -no-color vm1_fqdn | jq -r .)
          echo ::set-output name=vmfqdn::$vmfqdn
        fi
        exit 0
      shell: bash
      working-directory: terraform
